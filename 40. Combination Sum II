class Solution {
public:
    void fun(int ind, vector<int> &candidates, int target, vector<vector<int>> &ans, vector<int> &temp) {
        if (target == 0) {
            ans.push_back(temp); 
            return; 
        }
        if (ind == candidates.size() || target < 0) {
            return; 
        }
        temp.push_back(candidates[ind]); 
        fun(ind + 1, candidates, target - candidates[ind], ans, temp); 
        
        int next = ind + 1; 
        while (next < candidates.size() && candidates[next] == candidates[ind]) {
            next++; 
        }

        temp.pop_back();
        fun(next, candidates, target, ans, temp); 
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<int> temp; 
        vector<vector<int>> ans; 
        sort(candidates.begin(), candidates.end()); 
        fun(0, candidates, target, ans, temp);
        return ans;  
    }
};
