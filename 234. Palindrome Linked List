/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode * ptr = head; 
        if (head == nullptr || head->next == nullptr) {
            return true; 
        }
        stack<int> st; 
        while (ptr != nullptr) {
            st.push(ptr->val); 
            ptr = ptr->next; 
        }
        ptr = head; 
        while (ptr != nullptr) {
            if (ptr->val != st.top()) {
                return false; 
            }
            ptr = ptr->next; 
            st.pop(); 
        }
        return true; 
    }
};
