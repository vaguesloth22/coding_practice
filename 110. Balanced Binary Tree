// Naive Approach: TC: O(N2), needs to be optimized, if skew-trees are encountered. 
class Solution {
public:
    int chk_height(TreeNode * root) {
        if (root == nullptr) {
            return 0; 
        }
        int lh = chk_height(root->left); 
        int rh = chk_height(root->right); 
        return 1 + max(lh, rh); 
    }
    bool isBalanced(TreeNode* root) {
        if (root == nullptr) {
            return true; 
        }
        int x = chk_height(root->left); 
        int y = chk_height(root->right); 
        if (abs(x-y) > 1) return false; 
        return (isBalanced(root->left) && isBalanced(root->right)); 
    }
};
