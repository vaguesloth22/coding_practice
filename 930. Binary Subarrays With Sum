// TC: O(2 * 2 * N)
// SC: O(1)
class Solution {
public:
    int fnc(vector<int> &nums, int goal) {
        if (goal < 0) return 0; 
        int left = 0, right = 0, sum = 0, cnt = 0; 
        while (right <= nums.size()) {
            sum += nums[right]; 
            while (sum > goal) {
                sum -= nums[left]; 
                left++; 
            }
            cnt = cnt + (right - left + 1); 
            right++; 
        } 
        return cnt;
    }
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        return fnc(nums, goal) - fnc(nums, goal - 1); 
    }
};
