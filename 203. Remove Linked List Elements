/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if (!head) return nullptr;
        ListNode * temp = head; 
        while (temp != nullptr && temp->val == val) { 
            temp = temp->next; 
        }
        if (temp == nullptr) return nullptr;
        head = temp; 
        ListNode * prev = temp;
        ListNode * curr = temp->next; 
        while (curr) {
            if (curr->val == val) {
                prev->next = curr->next; 
                curr = curr->next; 
            }
            else {
                prev = prev->next;  
                curr = curr->next; 
            }
        }
        return head; 
    }
};
