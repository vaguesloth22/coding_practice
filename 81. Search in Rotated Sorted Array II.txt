class Solution {
public:
    bool bs(vector<int> &nums, int low, int high, int target) {
        if (low > high) return false; 
        int mid = low + (high - low) / 2; 
        if (nums[mid] == target) return true;
        else if (nums[low] == nums[mid] && nums[mid] == nums[high]) {
            low = low + 1; 
            high = high - 1; 
            return bs(nums, low, high, target); 
        } 
        else if (nums[mid] >= nums[low]) {
            if (nums[low] <= target && nums[mid] >= target) {
                high = mid - 1; 
                return bs(nums, low, high, target); 
            }
            else {
                low = mid + 1; 
                return bs(nums, low, high, target); 
            }
        }
        else {
            if (nums[mid] <= target && target <= nums[high]) {
                low = mid + 1; 
                return bs(nums, low, high, target); 
            }
            else {
                high = mid - 1; 
                return bs(nums, low, high, target); 
            }
        }
        return false; 
    }
    bool search(vector<int>& nums, int target) {
        int low = 0; 
        int high = nums.size() - 1; 
        return bs(nums, low, high, target); 
    }
};