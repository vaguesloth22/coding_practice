// Approach: Use upper bound & pass it as a prament while recursion
class Solution {
public:
    TreeNode * bst(vector<int> &preorder, int &i, int ub) {
        if (i == preorder.size() || preorder[i] > ub) {
            return nullptr; 
        }
        TreeNode * root = new TreeNode(preorder[i++]); 
        root->left = bst(preorder, i, root->val); 
        root->right = bst(preorder, i, ub); 
        return root; 
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int i = 0; 
        return bst(preorder, i, INT_MAX); 
    }
};
