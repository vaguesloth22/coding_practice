// Naive Approach: Using find height recursively & using it inside another recursive function: 
class Solution {
public:
    int chk_height (TreeNode * root) {
        if (root == nullptr) return 0; 
        int lh = chk_height(root->left); 
        int rh = chk_height(root->right); 
        return 1 + max(lh, rh); 
    }
    int answer = 0; 
    void findDiameter (TreeNode * root) {
        if (root == nullptr) return; 
        int lh = chk_height(root->left); 
        int rh = chk_height(root->right); 
        answer = max(answer, lh + rh); 
        findDiameter (root->left); 
        findDiameter (root->right); 
    }
    int diameterOfBinaryTree(TreeNode* root) {
        findDiameter(root); 
        return answer; 
    }
};
