// Brute force: 
class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        vector <int> temp1; 
        vector <int> temp2; 
        vector <int> ans; 
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] < 0) {
                temp1.push_back(nums[i]); 
            } else {
                temp2.push_back(nums[i]); 
            }
        }
        for (int i = 0; i < nums.size() / 2; i++) {
            ans.push_back(temp2[i]);
            ans.push_back(temp1[i]); 
        }
        return ans; 
    }
};
// Optimal approach: 
class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        int n = nums.size(); 
        vector <int> ans (n, 0); 
        int posInd = 0, negInd = 1; 
        for (int i = 0; i < n; i++) {
            if (nums[i] < 0) {
                ans[negInd] = nums[i]; 
                negInd += 2; 
            } else {
                ans[posInd] = nums[i]; 
                posInd += 2; 
            }
        }
        return ans; 
    }
};
