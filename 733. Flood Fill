class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int startColor = image[sr][sc]; 
        image[sr][sc] = color; 
        if (startColor == color) return image; 
        int drow[] = {-1, 0, 1, 0}; 
        int dcol[] = {0, 1, 0, -1}; 
        queue<pair<int, int>> q; 
        q.push({sr, sc}); 
        while (!q.empty()) {
            int r = q.front().first; 
            int c = q.front().second; 
            q.pop(); 
            for (int i = 0; i < 4; i++) {
                int nr = r + drow[i]; 
                int nc = c + dcol[i]; 
                if (nr >= 0 && nr < image.size() && nc >= 0 && nc < image[0].size() && image[nr][nc] == startColor) {
                    image[nr][nc] = color; 
                    q.push({nr, nc}); 
                }
            }
        }
        return image; 
    }
};
